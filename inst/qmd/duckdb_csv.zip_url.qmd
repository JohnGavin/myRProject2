---
title: "Untitled"
format: html
---

```{r}
pacman::p_load(
  tidyverse, httr, duckdb, DBI,
  pins
)

pin_csv_zip_to_duckdb <- function(
    url, 
    table_name, 
    board_name = "local_cache") {
  # Create a local pins board for caching
  board <- board_folder(board_name, versioned = TRUE)

  # Create a unique name for the pin based on the URL
  pin_name <- digest::digest(url, algo = "md5")

  # Check if the data is already cached
  if (!pin_exists(board, pin_name)) {
    # If not cached, download and process the data
    temp <- tempfile()
    GET(url, write_disk(temp, overwrite = TRUE))

    # Extract the CSV file (assuming there's only one)
    csv_file <- unzip(temp, list = TRUE)$Name[1]
    csv_content <- unzip(temp, csv_file)

    # Read the CSV into a tibble
    data <- read_csv(csv_content)

    # Cache the data
    pin_write(board, data, name = pin_name)

    # Clean up
    unlink(temp)
    unlink(csv_content)
  } else {
    # If cached, read the data from the pin
    data <- pin_read(board, pin_name)
  }

  # Create an in-memory DuckDB connection
  con <- dbConnect(duckdb::duckdb(), dbdir = ":memory:")

  # Write the data to DuckDB
  dbWriteTable(con, table_name, data)

  return(con)
}

import_csv_zip_to_duckdb <- function(url, table_name) {
  # Download the ZIP file
  temp <- tempfile()
  GET(url, write_disk(temp, overwrite = TRUE))

  # Extract the CSV file (assuming there's only one)
  csv_file <- unzip(temp, list = TRUE)$Name[1]
  csv_content <- unzip(temp, csv_file)

  # Read the CSV into a tibble
  data <- read_csv(csv_content)

  # Create an in-memory DuckDB connection
  con <- dbConnect(duckdb::duckdb(), dbdir = ":memory:")

  # Write the data to DuckDB
  dbWriteTable(con, table_name, data)

  # Clean up
  unlink(temp)
  unlink(csv_content)

  return(con)
}

# Usage
url <- "https://s3.amazonaws.com/keras-datasets/jena_climate_2009_2016.csv.zip"
table_name <- "my_table"

db_conn <- pin_csv_zip_to_duckdb(url, table_name)
# db_conn <- import_csv_zip_to_duckdb(url, table_name)

# Query the imported data
result <- tbl(db_conn, table_name) %>%
  #head(5) %>%
  collect()

print(result)

```

```{r close connection}
dbDisconnect(db_conn)
```
